// this bit of complexity is to pull down the main build script from the alclabs maven repository
// and then apply it.
configurations { gradleScript }
repositories { mavenRepo url: 'http://repo.alcshare.com' }
dependencies { gradleScript group: 'com.alcshare', name: 'alclabs-gradle', ext: 'gradle', version: '1.16' }
apply from: configurations.gradleScript.resolve().iterator().next()

info {
  name = 'Weather'
  description = 'Periodically imports weather data from a selectable weather service into one or more locations '+
                'for use in views and logic programming.'
  version = '2.0.3' // Pre-release '+new Date().format('yyyy/MM/dd kk:mm:ss')
  vendor = 'ALC Labs'
}

dependencies {
   compile 'org.apache.httpcomponents:httpclient:4.1.2'
   compile 'commons-lang:commons-lang:2.4'
   compile 'dom4j:dom4j:1.6.1'
   compile 'org.json:json:20080701' // older version required for compatibility with 4.1 SP1b
   compile 'commons-io:commons-io:1.1'

   providedCompile 'com.controlj.green:addonsupport-api-addon:1.0.8'
   providedCompile 'javax.servlet:servlet-api:2.5'

   runtime 'jaxen:jaxen:1.0-FCS'
   runtime 'saxpath:saxpath:1.0-FCS'

   groovy      'org.codehaus.groovy:groovy-all:1.8.6'
   testCompile 'org.spockframework:spock-core:0.6-groovy-1.8'
   testCompile 'cglib:cglib-nodep:2.2'
   testCompile 'org.hamcrest:hamcrest-all:1.1'

   // to debug, remove the classifier: 'min' part
   js group: 'jquery', name: 'jquery', version: '1.7.1', classifier: 'min', ext: "js"
   js group: 'jquery', name: 'jquery-ui', version: '1.8.16', classifier: 'min', ext: "js"
}

// required for compatibility with 4.1 SP1b
sourceCompatibility = 1.5
targetCompatibility = 1.5

// The following strangeness is to get groovy dependencies only in the test configurations
configurations {
    compile.extendsFrom = [ providedCompile ]
    testCompile.extendsFrom groovy
}

def wbug_file = file("$buildDir/resources/main/com/controlj/addon/weather/wbug/wbug-key.txt")
def wbug_key = 'wbugkey'
task genwbugkey {
    inputs.property(wbug_key, { project.hasProperty(wbug_key) ? project.getProperty(wbug_key) : new Date()})
    outputs.file wbug_file
} << {
    if (project.hasProperty(wbug_key)) {
        wbug_file.parentFile.mkdirs()
        wbug_file.text = getProperty(wbug_key)
    } else throw new GradleException("ERROR: must set $wbug_key property to build")
}

processResources.dependsOn genwbugkey

task wbugClean(type: Delete) {
    delete wbug_file
}
clean.dependsOn wbugClean
