// this bit of complexity is to pull down the main build script from the alclabs maven repository
// and then apply it.
configurations { gradleScript }
repositories { mavenRepo url: 'http://repo.alcshare.com' }
dependencies { gradleScript group: 'com.alcshare', name: 'alclabs-gradle', ext: 'gradle', version: '1.0.7' }
apply from: configurations.gradleScript.resolve().iterator().next()

info {
  name = 'Weather'
  description = 'Periodically imports weather data from the National Weather Service into one or more control '+
                'programs for use in views and logic programming.'
  version = '1.0 Beta1'
  vendor = 'ALC Labs'
}

dependencies {
   compile 'org.apache.httpcomponents:httpclient:4.1.2'
   compile 'commons-lang:commons-lang:2.4'
   compile 'dom4j:dom4j:1.6.1'
   compile 'org.json:json:20090211'


   providedCompile 'com.controlj.green:addonsupport-api-addon:1.0.8'
   providedCompile 'javax.servlet:servlet-api:2.5'

   runtime 'jaxen:jaxen:1.0-FCS'
   runtime 'saxpath:saxpath:1.0-FCS'

   groovy      'org.codehaus.groovy:groovy-all:1.8.1'
   testCompile 'org.spockframework:spock-core:0.5-groovy-1.8'
   testCompile 'cglib:cglib-nodep:2.2'
   testCompile 'commons-io:commons-io:1.1'
   testCompile 'org.hamcrest:hamcrest-all:1.1'
}

// don't put the groovy jar in the .war file, we only need it for testing
war {
   classpath = classpath - configurations.groovy
}